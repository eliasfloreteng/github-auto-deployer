name: Release Binaries

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Get dependencies
        run: |
          go mod download
          go mod verify

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build
          BINARY_NAME=deployer-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          go build -ldflags="-s -w" -o "build/${BINARY_NAME}" cmd/deployer/main.go
          echo "Built: build/${BINARY_NAME}"
          ls -lh build/

      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/deployer-${{ matrix.goos }}-${{ matrix.goarch }}*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
